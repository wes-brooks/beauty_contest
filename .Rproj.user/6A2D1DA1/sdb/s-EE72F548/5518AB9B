{
    "contents" : "require(stringr)\n\n#root = \"~/beauty\"\nroot = \"C:\\\\Users\\\\wrbrooks\\\\scratch\\\\output\"\n\nsites = c('hika', 'maslowski', 'kreher', 'thompson', 'point', 'neshotah', 'redarrow')\nmethods = c('pls', 'gbm', 'gbmcv', 'galogistic-unweighted', 'galogistic-weighted', 'adalasso-unweighted', 'adalasso-unweighted-select', 'adalasso-weighted', 'adalasso-weighted-select', 'galm', 'adapt', 'adapt-select', 'spls', 'spls-select')\n\n#sites = c(\"thompson\")\n#methods = c(\"gbmcv\")\n\n\nROC = function(results) {\n  r = results\n  \n  #Begin by assuming that we call every observation an exceedance\n  area = 0\n  spec_last = 0\n  sens_last = 1\n  \n  sensitivity = r$tpos / (r$tpos + r$fneg)\n  specificity = r$tneg / (r$tneg + r$fpos)\n  \n  for (k in 1:nrow(r)) {\n    area = area + (specificity[k] - spec_last) * sensitivity[k]\n    spec_last = specificity[k]\n  }\n  \n  return(area)\n}\n\n\nresults = list()\nfor (site in sites) {\n  site_results = list()\n  for (method in methods) {\n    path = paste(root, site, method, sep=\"/\")\n    filelist = list.files(path)\n    indx = grep(paste(\"^beautyrun\\\\.\\\\d+\\\\.\", site, \"\\\\.\", method, \"\\\\.out\", sep=\"\"), filelist, perl=TRUE)\n    files = filelist[indx]\n    \n    predicted = vector()\n    actual = vector()\n    threshold = vector()\n    fold = vector()\n    vars = list()\n    \n    for (f in files) {\n      raw = scan(paste(path, f, sep=\"/\"), 'character', sep='\\n')\n      \n      i = grep(\"^# predicted:\", raw)\n      predicted = c(predicted, as.numeric(raw[i+1]))\n      \n      i = grep(\"^# actual:\", raw)\n      actual = c(actual, as.numeric(raw[i+1]))\n      \n      i = grep(\"^# fold:\", raw)\n      fold = c(fold, as.numeric(raw[i+1]))\n      \n      i = grep(\"^# threshold:\", raw)\n      threshold = c(threshold, as.numeric(raw[i+1]))\n      \n      i = grep(\"^# vars:\", raw)\n      vars = c(vars, strsplit(raw[i+1], split=\", \"))\n    }\n    \n    res = data.frame(predicted=predicted, actual=actual, fold=fold, threshold=threshold)\n    res = res[order(res[['threshold']]),]\n    \n    tpos = rep(NA, nrow(res))\n    tneg = rep(NA, nrow(res))\n    fpos = rep(NA, nrow(res))\n    fneg = rep(NA, nrow(res))\n    \n    for (t in unique(res[['threshold']])) {\n      indx = which(res[['threshold']]==t)\n      posindx = which(res[['threshold']]>=t)\n      negindx = which(res[['threshold']]<t)\n      \n      tpos[indx] = sum(res$actual[posindx] > 2.3711)\n      tneg[indx] = sum(res$actual[negindx] <= 2.3711)\n      fpos[indx] = sum(res$actual[posindx] <= 2.3711)\n      fneg[indx] = sum(res$actual[negindx] > 2.3711)\n    }\n    res = cbind(res, tpos, tneg, fpos, fneg)\n    \n    site_results[[method]] = list(res=res, roc=ROC(res))#, vars=vars)\n  }\n  results[[site]] = site_results\n}\n  \nsites = c('hika', 'maslowski', 'kreher', 'thompson', 'point', 'neshotah', 'redarrow')\nmethods = c('pls', 'gbm', 'gbmcv', 'galogistic-unweighted', 'galogistic-weighted', 'adapt', 'adapt-select', 'adalasso-unweighted', 'adalasso-unweighted-select', 'adalasso-weighted', 'adalasso-weighted-select', 'galm'\n              , 'spls', 'spls-select')\n  \n  \narea = matrix(NA, length(methods), length(sites))\nrownames(area) = methods\ncolnames(area) = sites\n\nfor (site in sites) {\n  for (method in methods) {\n    cat(paste(method, site, results[[site]][[method]][['roc']], '\\n', sep=\" \"))\n    area[method, site] = results[[site]][[method]][['roc']]\n  }\n}\n\n\n\n#Make the plots\nlogistic_methods = c('galogistic-unweighted', 'galogistic-weighted', 'adalasso-weighted-select', 'adalasso-unweighted-select', 'adalasso-weighted', 'adalasso-unweighted')\nplots = list()\nfor (site in sites) {\n    site_plots = list()\n    for (method in methods) {\n        site_plots[[method]] = with(results[[site]][[method]][['res']], qplot(actual, predicted) + ggtitle(method))\n        site_plots[[method]] = site_plots[[method]] + geom_vline(xintercept=2.3711, linetype='longdash', colour='red')\n        #if (!(method %in% logistic_methods)) {site_plots[[method]] = site_plots[[method]] + geom_abline()}\n    }\n    plots[[site]] = site_plots\n    \n    pdf(paste(\"figures/\", site, \".pdf\", sep=\"\"), width=16, height=20)\n    multiplot(plotlist=plots[[site]], cols=3)\n    dev.off()\n}\n\n\n",
    "created" : 1393883804722.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3103393057",
    "id" : "5518AB9B",
    "lastKnownWriteTime" : 1393888667,
    "path" : "C:/Users/wrbrooks/git/beauty_contest/R/collate.r",
    "project_path" : "R/collate.r",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}